name: Full Suite End-to-end tests

on:
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - master
      - next

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
        
    steps:
      - name: Install postgres
        run: sudo apt update && sudo apt install postgresql postgresql-contrib

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Clone the QCFractal repository
        uses: actions/checkout@v3
        with:
          path: qcfractal

      - name: Clone QCPortal repository
        uses: actions/checkout@v3
        with:
          repository: MolSSI/QCPortal.git
          ref: next
          path: qcportal

      - name: Clone QCFractalCompute repository
        uses: actions/checkout@v3
        with:
          repository: MolSSI/QCFractalCompute.git
          ref: next
          path: qcfractalcompute

      - name: Update QCPortal and QCFractalCompute packages
        shell: bash -l {0}
        run: |
          cp -a qcfractal/qcportal/. qcportal/qcportal/
          cp -a qcfractal/qcfractalcompute/. qcfractalcompute/qcfractalcompute/

      - name: Configure conda for the QCFractal server
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: qcarchive-server
          environment-file: qcfractal/conda-envs/qcfractal_server.yaml
          auto-activate-base: false

      - name: Install QCFractal
        shell: bash -l {0}
        run: |
          pip install -e ./qcfractal

      - name: Conda info for the QCFractal server
        shell: bash -l {0}
        run: |
          conda info

      - name: Start the QCFractal server
        shell: bash -l {0}
        run: |
          mkdir server; cd server
          cp ../qcfractal/qcfractaltesting/config_files/gha_fractal_server.yaml ./
          qcfractal-server --config=gha_fractal_server.yaml init
          qcfractal-server --config=gha_fractal_server.yaml start &

      - name: Configure conda for QCFractalCompute worker
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: qcarchive-worker
          environment-file: qcfractal/conda-envs/worker_pool_example.yaml
          auto-activate-base: false

      - name: Install QCFractalCompute
        shell: bash -l {0}
        run: |
          pip install -e ./qcportal
          pip install -e ./qcfractalcompute

      - name: Conda info for the QCFractalCompute worker
        shell: bash -l {0}
        run: |
          conda info


      - name: Start the QCFractalCompute worker
        shell: bash -l {0}
        run: |
          mkdir compute; cd compute
          cp ../qcfractal/qcfractaltesting/config_files/gha_fractal_compute_pool.yaml ./
          qcfractal-manager --config=gha_fractal_compute_pool.yaml &

      - name: Configure conda for the QCPortal client
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: qcarchive-portal
          environment-file: qcfractal/conda-envs/qcportal.yaml
          auto-activate-base: false

      - name: Install QCPortal
        shell: bash -l {0}
        run: |
          pip install -e ./qcportal
          pip install pytest

      - name: Conda info for the QCPortal client
        shell: bash -l {0}
        run: |
          conda info
  
      - name: Run Tests
        shell: bash -l {0}
        run: |
          cd qcfractal
          pytest -v --fractal-uri="http://127.0.0.1:7900" qcfractaltesting

      - name: Stop server & worker
        shell: bash -l {0}
        run: |
          killall qcfractal-manager
          killall qcfractal-server

      - name: 'Save logs/artifacts'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: qcfractal_testing_artifacts_${{ matrix.python-version }}
          path: |
            server
            compute
            qcportal
            qcfractalcompute
            !server/postgres/.s.*
          retention-days: 7
